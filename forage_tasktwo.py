# -*- coding: utf-8 -*-
"""Forage-TaskTwo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wMZE0oP_XXtwPsi_KhqKA7przZCbM46L
"""

#Main function
def pricing(injection_date, withdrawal_date, injection_rate, withdrawal_rate, storage_max_vol, storage_cost):
    storage_vol = 0
    injection_price = 0
    withdrawal_price = 0
    actions = {}
    for i in injection_date:
        actions[i]="inject"
    for j in withdrawal_date:
        actions[j]="withdraw"
    dates = list(actions.keys())
    dates.sort()
    sorted_actions = {i: actions[i] for i in dates}
    for i in sorted_actions.copy():
        if sorted_actions[i]=="inject":
            if storage_vol + injection_rate <= storage_max_vol:
                storage_vol += injection_rate
                date = datetime.strptime(i, "%m/%d/%y")
                injection_price += injection_rate * interpolate(date, forecast)
            else:
                del sorted_actions[i] #Skip injection if the storage reaches max volume
        else:
            if storage_vol - withdrawal_rate >= 0:
                storage_vol -= withdrawal_rate
                date = datetime.strptime(i, "%m/%d/%y")
                withdrawal_price += withdrawal_rate * interpolate(date, forecast)
            else:
                del sorted_actions[i] #Skip withdrawal if the storage is empty
    contract_price = withdrawal_price - injection_price - storage_cost
    return contract_price

#Testing
print(pricing(['08/05/24', '09/01/24'], ['11/01/24', '12/01/24'], 20, 40, 50, 5))